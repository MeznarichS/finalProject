color pink = color(255, 204, 204);
color blue = color(0, 87, 167);
color lightBlue = color(135, 191, 234);

void setup() {
  size(1500, 1500);
  background(255);
}

void draw() {
  noStroke();
  stich();
  eeyore();
  dinosaur();
  toothless();
  
  /*
  for (int i=10; i<=250; i+=10) {
    rect(360, i, 10, 10);
  }
  rect(460, 10, 10, 10);
  */
}

void stich() {
  blueSquares();
  lightBlueSquares();
  pinkSquares();
  blackSquares();
}

void dinosaur() {
  blackSquares2();
  darkGreenSquares();
  /*
  pinkSquares2();
  greenSquares();
  */
}

void eeyore() {
  blueSquares2();
  /*
  pinkSquares3();
  blackSquares3();
  whiteSquares(); ??
  */
}

void toothless() {
  /*
  graySquares();
  blackSquares3();
  greenSquares();
  fill(255);
  rect(x1, y, 10, 10);
  rect(x2, y, 10, 10);
  */
}

//stitch ========================================================
void blueSquares() {
  fill(blue);
  rect(20, 10, 10, 10);
  rect(30, 20, 10, 10);
  rect(30, 30, 10, 10);
  rect(40, 40, 10, 10);
  rect(40, 50, 10, 10);
  rect(50, 60, 10, 10);
  rect(50, 70, 10, 10);
  rect(50, 80, 10, 10);
  rect(120, 50, 10, 10);
  rect(130, 40, 10, 10);
  rect(140, 50, 10, 10);
  rect(150, 40, 10, 10);
  rect(240, 10, 10, 10);
  rect(230, 20, 10, 10);
  rect(230, 30, 10, 10);
  rect(220, 40, 10, 10);
  rect(220, 50, 10, 10);
  rect(210, 60, 10, 10);
  rect(210, 70, 10, 10);
  rect(210, 80, 10, 10);
  for (int i=100; i<=160; i+=10) {
    rect(i, 60, 10, 10);
  }
  for (int i=80; i<=180; i+=10) {
    rect(i, 70, 10, 10);
  }
  for (int i=80; i<=180; i+=10) {
    rect(i, 80, 10, 10);
  }
  for (int i=90; i<=170; i+=10) {
    rect(i, 90, 10, 10);
  }
  for (int i=100; i<=160; i+=10) {
    rect(i, 100, 10, 10);
  }
  for (int i=110; i<=150; i+=10) {
    rect(i, 110, 10, 10);
  }
  for (int i=110; i<=150; i+=10) {
    rect(i, 120, 10, 10);
  }
  rect(110, 130, 10, 10);
  rect(150, 130, 10, 10);
  rect(50, 140, 10, 10);
  rect(100, 140, 10, 10);
  rect(160, 140, 10, 10);
  rect(210, 140, 10, 10);
  rect(50, 150, 10, 10);
  rect(60, 150, 10, 10);
  rect(90, 150, 10, 10);
  rect(100, 150, 10, 10);
  rect(110, 150, 10, 10);
  rect(150, 150, 10, 10);
  rect(160, 150, 10, 10);
  rect(170, 150, 10, 10);
  rect(200, 150, 10, 10);
  rect(210, 150, 10, 10);
  for (int i=50; i<=210; i+=10) {
    rect(i, 160, 10, 10);
  }
  rect(60, 170, 10, 10);
  rect(200, 170, 10, 10);
  rect(110, 180, 10, 10);
  rect(150, 180, 10, 10);
  rect(100, 190, 10, 10);
  rect(110, 190, 10, 10);
  rect(150, 190, 10, 10);
  rect(160, 190, 10, 10);
  rect(110, 200, 10, 10);
  rect(150, 200, 10, 10);
  rect(80, 210, 10, 10);
  rect(90, 210, 10, 10);
  for (int i=210; i<=240; i+=10) {
    rect(100, i, 10, 10);
  }
  for (int i=210; i<=240; i+=10) {
    rect(160, i, 10, 10);
  }
  rect(170, 210, 10, 10);
  rect(180, 210, 10, 10);
  rect(80, 240, 10, 10);
  rect(90, 240, 10, 10);
  rect(170, 240, 10, 10);
  rect(180, 240, 10, 10);
}

void lightBlueSquares() {
  fill(lightBlue);
  rect(70, 80, 10, 10);
  rect(190, 80, 10, 10);
  rect(60, 90, 10, 10);
  rect(80, 90, 10, 10);
  rect(180, 90, 10, 10);
  rect(200, 90, 10, 10);
  for (int i=100; i<=130; i+=10) {
    rect(50, i, 10, 10);
  }
  rect(90, 100, 10, 10);
  rect(170, 100, 10, 10);
  for (int i=100; i<=130; i+=10) {
    rect(210, i, 10, 10);
  }
  rect(100, 110, 10, 10);
  rect(160, 110, 10, 10);
  rect(100, 120, 10, 10);
  rect(160, 120, 10, 10);
  rect(100, 130, 10, 10);
  rect(160, 130, 10, 10);
  rect(60, 140, 10, 10);
  rect(90, 140, 10, 10);
  rect(170, 140, 10, 10);
  rect(200, 140, 10, 10);
  rect(70, 150, 10, 10);
  rect(80, 150, 10, 10);
  rect(180, 150, 10, 10);
  rect(190, 150, 10, 10);
  for (int i=70; i<=190; i+=10) {
    rect(i, 170, 10, 10);
  }
  rect(120, 180, 10, 10);
  for (int i=180; i<=230; i+=10) {
    rect(130, i, 10, 10);
  }
  rect(140, 180, 10, 10);
  rect(120, 220, 10, 10);
  rect(140, 220, 10, 10);
  rect(120, 230, 10, 10);
  rect(140, 230, 10, 10);
}

void pinkSquares() {
  fill(pink);
  rect(10, 20, 10, 10);
  rect(10, 30, 10, 10);
  for (int i=50; i<=80; i+=10) {
    rect(10, i, 10, 10);
  }
  for (int i=20; i<=90; i+=10) {
    rect(20, i, 10, 10);
  }
  for (int i=40; i<=110; i+=10) {
    rect(30, i, 10, 10);
  }
  for (int i=60; i<=90; i+=10) {
    rect(40, i, 10, 10);
  }
  for (int i=20; i<=90; i+=10) {
    rect(240, i, 10, 10);
  }
  for (int i=40; i<=110; i+=10) {
    rect(230, i, 10, 10);
  }
  for (int i=60; i<=90; i+=10) {
    rect(220, i, 10, 10);
  }
  for (int i=20; i<=50; i+=10) {
    rect(250, i, 10, 10);
  }
  rect(250, 70, 10, 10);
  rect(250, 80, 10, 10);
}

void blackSquares() {
  fill(0);
  rect(30, 10, 10, 10);
  rect(230, 10, 10, 10);
  rect(40, 20, 10, 10);
  rect(220, 20 ,10, 10);
  rect(40, 30, 10, 10);
  rect(130, 30, 10, 10);
  rect(150, 30, 10, 10);
  rect(160, 30, 10, 10);
  rect(220, 30, 10, 10);
  rect(50, 40, 10, 10);
  rect(120, 40, 10, 10);
  rect(140, 40, 10, 10);
  rect(160, 40, 10, 10);
  rect(210, 40, 10, 10);
  rect(50, 50, 10, 10);
  rect(100, 50, 10, 10);
  rect(110, 50, 10, 10);
  rect(130, 50, 10, 10);
  rect(150, 50, 10, 10);
  rect(160, 50, 10, 10);
  rect(210, 50, 10, 10);
  rect(80, 60, 10, 10);
  rect(90, 60, 10, 10);
  rect(170, 60, 10, 10);
  rect(180, 60, 10, 10);
  rect(70, 70, 10, 10);
  rect(190, 70, 10, 10);
  rect(60, 80, 10, 10);
  rect(200, 80, 10, 10);
  rect(50, 90, 10, 10);
  rect(70, 90, 10, 10);
  rect(190, 90, 10, 10);
  rect(210, 90, 10, 10);
  rect(20, 100, 10, 10);
  rect(30, 120, 10, 10);
  for (int i=100; i<=150; i+=10) {
    rect(40, i, 10, 10);
  }
  rect(60, 100, 10, 10);
  rect(70, 100, 10, 10);
  rect(80, 100, 10, 10);
  rect(180, 100, 10, 10);
  rect(190, 100, 10, 10);
  rect(200, 100, 10, 10);
  for (int i=100; i<=150; i+=10) {
    rect(220, i, 10, 10);
  }
  rect(230, 120, 10, 10);
  rect(240, 100, 10, 10);
  rect(60, 110, 10, 10);
  rect(70, 110, 10, 10);
  rect(90, 110, 10, 10);
  rect(170, 110, 10, 10);
  rect(190, 110, 10, 10);
  rect(200, 110, 10, 10);
  for (int i=60; i<=90; i+=10) {
    rect(i, 120, 10, 10);
  }
  for (int i=170; i<=200; i+=10) {
    rect(i, 120, 10, 10);
  }
  rect(200, 120, 10, 10);
  rect(220, 120, 10, 10);
  rect(230, 120, 10, 10);
  rect(40, 130, 10, 10);
  rect(60, 130, 10, 10);
  rect(80, 130, 10, 10);
  rect(90, 130, 10, 10);
  for (int i=120; i<=140; i+=10) {
    rect(i, 130, 10, 10);
  }
  rect(170, 130, 10, 10);
  rect(180, 130, 10, 10);
  rect(200, 130, 10, 10);
  rect(70, 140, 10, 10);
  rect(80, 140, 10, 10);
  for (int i=110; i<=150; i+=10) {
    rect(i, 140, 10, 10);
  }
  rect(180, 140, 10, 10);
  rect(190, 140, 10, 10);
  rect(120, 150, 10, 10);
  rect(130, 150, 10, 10);
  rect(140, 150, 10, 10);
  rect(100, 180, 10, 10);
  rect(160, 180, 10, 10);
  rect(90, 190, 10, 10);
  rect(120, 190, 10, 10);
  rect(140, 190, 10, 10);
  rect(170, 190, 10, 10);
  rect(80, 200, 10, 10);
  rect(90, 200, 10, 10);
  rect(100, 200, 10, 10);
  rect(120, 200, 10, 10);
  rect(140, 200, 10, 10);
  rect(160, 200, 10, 10);
  rect(170, 200, 10, 10);
  rect(180, 200, 10, 10);
  for (int i=210; i<=240; i+=10) {
    rect(70, i, 10, 10);
    rect(110, i, 10, 10);
    rect(150, i, 10, 10);
    rect(190, i, 10, 10);
  }
  rect(120, 210, 10, 10);
  rect(140, 210, 10, 10);
  for (int i=220; i<=230; i+=10) {
    rect(80, i, 10, 10);
    rect(90, i, 10, 10);
    rect(110, i, 10, 10);
    rect(150, i, 10, 10);
    rect(170, i, 10, 10);
    rect(180, i, 10, 10);
  }
  rect(120, 240, 10, 10);
  rect(130, 240, 10, 10);
  rect(140, 240, 10, 10);  
  rect(80, 250, 10, 10);
  rect(90, 250, 10, 10);
  rect(100, 250, 10, 10);
  rect(160, 250, 10, 10);
  rect(170, 250, 10, 10);
  rect(180, 250, 10, 10);
}

//dinosaur ========================================================
void blackSquares2() {
  fill(0);
  rect(580, 10, 10, 10);
  rect(590, 10, 10, 10);
  rect(600, 10, 10, 10);
  rect(570, 20, 10, 10);
  rect(610, 20, 10, 10);
  for (int i=550; i<=600; i+=10) {
    rect(i, 30, 10, 10);
  }
  rect(620, 30, 10, 10);
  rect(530, 40, 10, 10);
  rect(540, 40, 10, 10);
  rect(610, 40, 10, 10);
  rect(620, 40, 10, 10);
  rect(640, 40, 10, 10);
  rect(650, 40, 10, 10);
  rect(520, 50, 10, 10);
  rect(630, 50, 10, 10);
  rect(660, 50, 10, 10);
  rect(510, 60, 10, 10);
  rect(640, 60, 10, 10);
  rect(660, 60, 10, 10);
  rect(510, 70, 10, 10);
  rect(650, 70, 10, 10);
  for (int i=80; i<=140; i+=10) {
    rect(500, i, 10, 10);
  }
  rect(650, 80, 10, 10);
  rect(670, 80, 10, 10);
  rect(660, 90, 10, 10);
  rect(680, 90, 10, 10);
  rect(520, 100, 10, 10);
  rect(530, 100, 10, 10);
  rect(600, 100, 10, 10);
  rect(610, 100, 10, 10);
  rect(660, 100, 10, 10);
  rect(680, 100, 10, 10);
  rect(520, 110, 10, 10);
  rect(530, 110, 10, 10);
  rect(600, 110, 10, 10);
  rect(610, 110, 10, 10);
  rect(660, 110, 10, 10);
  rect(670, 110, 10, 10);
  rect(550, 120, 10, 10);
  rect(580, 120, 10, 10);
  rect(660, 120, 10, 10);
  rect(560, 130, 10, 10);
  rect(570, 130, 10, 10);
  rect(650, 130, 10, 10);
  rect(670, 130, 10, 10);
  rect(650, 140, 10, 10);
  rect(670, 140, 10, 10);
  rect(640, 150, 10, 10);
  rect(670, 150, 10, 10);
  rect(510, 150, 10, 10);
  rect(520, 160, 10, 10);
  rect(530, 160, 10, 10);
  rect(620, 160, 10, 10);
  rect(630, 160, 10, 10);
  rect(650, 160, 10, 10);
  rect(660, 160, 10, 10);
  for (int i=540; i<=610; i+=10) {
    rect(i, 170, 10, 10);
  }
  rect(540, 180, 10, 10);
  rect(610, 180, 10, 10);
  rect(620, 180, 10, 10);
  rect(540, 190, 10, 10);
  rect(610, 190, 10, 10);
  rect(630, 190, 10, 10);
  rect(530, 200, 10, 10);
  rect(550, 200, 10, 10);
  rect(600, 200, 10, 10);
  rect(620, 200, 10, 10);
  rect(640, 200, 10, 10);
  rect(530, 210, 10, 10);
  rect(560, 210, 10, 10);
  rect(590, 210, 10, 10);
  rect(620, 210, 10, 10);
  rect(650, 210, 10, 10);
  rect(530, 220, 10, 10);
  rect(560, 220, 10, 10);
  rect(590, 220, 10, 10);
  rect(620, 220, 10, 10);
  rect(630, 220, 10, 10);
  rect(640, 220, 10, 10);
  for (int i=540; i<=550; i+=10) {
    rect(i, 230, 10, 10);
    rect(i+30, 230, 10, 10);
    rect(i+60, 230, 10, 10);
  }
  
}
void pinkSquares2() {
  fill(pink);
  rect(510, 110, 10, 10);
  rect(510, 120, 10, 10);
  rect(520, 120, 10, 10);
  rect(620, 110, 10, 10);
  rect(610, 120, 10, 10);
  rect(620, 120, 10, 10);
}
void greenSquares() {
  for (int i=550; i<=600; i+=10) {
    rect(i, 40, 10, 10);
  }
  for (int i=530; i<=620; i+=10) {
    rect(i, 50, 10, 10);
  }
  for (int i=520; i<=630; i+=10) {
    rect(i, 60, 10, 10);
  }
  for (int i=520; i<=640; i+=10) {
    rect(i, 70, 10, 10);
  }
  for (int i=510; i<=640; i+=10) {
    rect(i, 80, 10, 10);
  }
  for (int i=510; i<=650; i+=10) {
    rect(i, 90, 10, 10);
  }
  rect(510, 100, 10, 10);
  for (int j=100; j<=110; j+=10) {
    for (int i=540; i<=590; i+=10) {
      rect(i, j, 10, 10);
    }
    for (int i=620; i<=650; i+=10) {
      rect(i, j, 10, 10);
    }
  }
  rect(530, 120, 10, 10);
  rect(540, 120, 10, 10);
  rect(560, 120, 10, 10);
  rect(570, 120, 10, 10);
  rect(590, 120, 10, 10);
  rect(600, 120, 10, 10);
  rect(630, 120, 10, 10);
  rect(640, 120, 10, 10);
  rect(650, 120, 10, 10);
  for (int i=510; i<=550; i+=10) {
    rect(i, 130, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 130, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 140, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 150, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 160, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 180, 10, 10);
  }
  for (int i=0; i<=0; i+=10) {
    rect(i, 190, 10, 10);
  }
  
}
void darkGreenSquares() {
  fill(150); //change
  rect(580, 20, 10, 10);
  rect(590, 20, 10, 10);
  rect(600, 20, 10, 10);
  rect(610, 30, 10, 10);
  rect(640, 50, 10, 10);
  rect(650, 50, 10, 10);
  rect(650, 60, 10, 10);
  rect(670, 90, 10, 10);
  rect(670, 100, 10, 10);
  rect(660, 130, 10, 10);
  rect(660, 140, 10, 10);
  rect(650, 150, 10, 10);
  rect(660, 150, 10, 10);
  rect(550, 220, 10, 10);
  rect(600, 220, 10, 10);
}


//eeyore ========================================================
void blueSquares2() {
  fill(blue);
}

void pinkSquares3() {
  fill(pink);
}

void blackSquares3() {
  fill(0);
}
